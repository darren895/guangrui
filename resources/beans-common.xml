<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/task
           http://www.springframework.org/schema/task/spring-task.xsd">

	<context:annotation-config />
	<context:component-scan base-package="com" />
    <aop:aspectj-autoproxy />
    <aop:config proxy-target-class="true" />
    <task:annotation-driven />

    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="10"/>
        <property name="maxPoolSize" value="30"/>
    </bean>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>classpath:jdbc.properties</value>
		</property>
	</bean>

	<!-- C3P0配置 -->
	<bean id="dataSource" destroy-method="close"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="properties">
			<props>
				<prop key="user">${jdbc.username}</prop>
				<prop key="password">${jdbc.password}</prop>
			</props>
		</property>
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="minPoolSize" value="10" />
		<property name="maxPoolSize" value="200" />
		<property name="initialPoolSize" value="50" />
		<property name="maxIdleTime" value="5" />
		<property name="acquireIncrement" value="10" />
		<property name="maxStatements" value="0" />
		<!-- 
		<property name="initialPoolSize" value="20" />
		 -->
		<property name="idleConnectionTestPeriod" value="0" />
		<property name="acquireRetryAttempts" value="30" />
		<property name="breakAfterAcquireFailure" value="false" />
		<property name="testConnectionOnCheckin" value="false" />
		<property name="testConnectionOnCheckout" value="false" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
				<value>com.guangrui.model</value>
				<value>com.guangrui.model.*</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<!--
				<prop key="hibernate.jdbc.fetch_size">80</prop>
				<prop key="hibernate.jdbc.batch_size">35</prop>
				 -->
				<prop key="hibernate.current_session_context_class">thread</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
                <prop key="hibernate.cache.provider_configuration_file_resource_path">ehcache.xml</prop>
				
				<prop key="hibernate.search.default.directory_provider">org.hibernate.search.store.FSDirectoryProvider</prop>
				<prop key="hibernate.search.default.indexBase">/Users/young/Documents/workspace/IdeaProjects/uihome2.0/index</prop>


				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.jdbc.batch_size">100</prop>
				<prop key="hibernate.jdbc.fetch_size">50</prop>
				<prop key="hibernate.default_batch_fetch_size">50</prop>
				<prop key="hibernate.cache.use_minimal_puts">true</prop>
				<prop key="hibernate.connection.release_mode">after_transaction</prop>
			</props>
		</property>
	</bean>

	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<bean id="hedao" class="com.guangrui.hibernate.HibernateEntityDao" scope="prototype">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<bean id="baseDao" class="com.guangrui.hibernate.baseDao.BaseDao"
		abstract="true" depends-on="hedao">
		<property name="hedao">
			<ref bean="hedao" />
		</property>
	</bean>

	<bean id="txManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!--
		<aop:config> <aop:pointcut id="allActionMethods"
		expression="execution(public * cn.uihome.action.*.*(..))" />
		<aop:advisor pointcut-ref="allActionMethods" advice-ref="txAdvice2" />

		</aop:config> <tx:advice id="txAdvice2"
		transaction-manager="txManager"> <tx:attributes> <tx:method
		name="add*" propagation="REQUIRED" /> <tx:method name="update*"
		propagation="REQUIRED" /> <tx:method name="del*"
		propagation="REQUIRED" /> <tx:method name="check*"
		propagation="REQUIRED" /> </tx:attributes> </tx:advice>
	-->
</beans>